{
    "ADAIntelligentSolutionDesignAndOperations.md": {
        "Title": "Ecosystem: ADA - collaboration-centric and AI-augmented solution design & operations",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/ADAIntelligentSolutionDesignAndOperations.md",
        "Abstract": "ADA is an ArchOps Prototype that demonstrates collaboration-centric and AI-augmented approach to solution design and operations that aims to improve the engineering experience. It consists of two main components: Collaborative Diagramming and ADA Assistant.\n\nDuring this session we will show you:\n\n- how Collaborative Diagramming app can make solution design and infrastructure development more efficient, reliable and fun\n- how ADA Assistant could augment Architects and Developers, while they are working on Solution Architecture and Infrastructure. We will also give you the examples of AI usecases and share our findings.\n\nADA was created by partnered teams Protopia_ and NVT FutureHub with support of Microsoft.",
        "Date of Evaluation": "2023-07-17",
        "Development Phase": "Requirements, Plan",
        "Adoption Readiness": "Visionary",
        "Scopes": "General",
        "Cluster": "Architecture, Artificial Intelligence",
        "External Speaker": false,
        "Keywords": "['ArchOps Prototype', 'collaboration-centric approach', 'AI-augmented approach', 'solution design and operations', 'engineering experience']"
    },
    "AiLeap.md": {
        "Title": "Ecosystem: A leap forward in AI? How are Chat GPT, Vall-E affecting us",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/AiLeap.md",
        "Abstract": "In the last weeks we have seen a huge hype on the capabilities of Chat-GPT. Lately machine learning models are becoming better very rapidly: they can write letters, modify videos and synthesize speech with an increasing quality.  With this advancement they are also becoming mainstream and people outside of IT jobs will get easy access to these capabilities.\n\nThis session looks at possible benefits, but also risks associated due to this development. Not going into the technical details, it should give some room for discussion. How will AI impact our daily work and the overall society. How can SAP make benefit out of it?",
        "Date of Evaluation": "2023-07-17",
        "Development Phase": "Code",
        "Adoption Readiness": "Early Adopter",
        "Scopes": "General",
        "Cluster": "Developer Experience, Security, Artificial Intelligence",
        "External Speaker": false,
        "Keywords": "['Chat-GPT', 'machine learning models', 'advancement', 'benefits', 'risks']"
    },
    "AI_Tooling.md": {
        "Title": "Ecosystem: AI Engineering Tools",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/AI_Tooling.md",
        "Abstract": "With the ever increasing capability of AI there are new tools available that can significantly improve the developer experience.\n\nIn this session we will show you how we enhanced SAP open source sflight CAP example using AI based commercial tools.\nCurrently those tools are not allowed for usage within SAP. But still makes sense to learn and explore the capabilities these tools offer.\n\n- How to generate test data, enhance code and create tests with **GitHub CoPilot**\n- How to get information on code security and code quality directly in the IDE with **Snyk Code**\n- How to generate code documentation based on the code directly in the IDE with **Mintlify**\n- The latest and greatest: Examples for coding with **GPT-4**",
        "Date of Evaluation": "2023-07-17",
        "Development Phase": "Code",
        "Adoption Readiness": "Early Adopter",
        "Scopes": "General",
        "Cluster": "Test Automation, Developer Experience, Security, Artificial Intelligence",
        "External Speaker": false,
        "Keywords": "['AI based commercial tools', 'developer experience', 'enhancing SAP open source sflight CAP example', 'GitHub CoPilot', 'Snyk Code']"
    },
    "ArchitectureEvaluationInAgileContext.md": {
        "Title": "Ecosystem: Architecture evaluations in agile environments",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/ArchitectureEvaluationInAgileContext.md",
        "Abstract": "Architecture evaluations originate from the \"classic\" school of software architecture. To what extent do agile projects benefit from this practice? What is the state-of-the-practice and which methods are suited for agile environments? How does the well-known Architecture Tradeoff Analysis Method (ATAM) fare in this regard? In this session I will provide answers, support them with practical experience and give tips for your own application.",
        "Date of Evaluation": "2023-07-17",
        "Development Phase": "Requirements, Plan",
        "Adoption Readiness": "Ready for Adoption",
        "Scopes": "General",
        "Cluster": "Architecture",
        "External Speaker": true,
        "Keywords": "['architecture evaluations', 'agile projects', 'state-of-the-practice', 'methods suited for agile environments', 'Architecture Tradeoff Analysis Method (ATAM)']"
    },
    "DORA.md": {
        "Title": "Ecosystem: DORA - Why It's Important, And Why It's Challenging",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/DORA.md",
        "Abstract": "In this talk, DevOps Research and Assessment - DORA - will be introduced. Metrics, such as \"lead time to change\", and more, have been identified in this research as critical for business success. The connection to Cloud Native & DevOps practices & principles will be drawn, and we'll dig a bit into the difficulties, that teams and organizations often face when they try to adopt these. Unsurprisingly, there is also a connection to organization and architecture. Many teams and organizations find it difficult to deliver faster and more frequently and have their service (almost) always available. What environmnent & approach is needed to make it work, and improve on the DORA metrics?",
        "Date of Evaluation": "2023-07",
        "Development Phase": "Cross",
        "Adoption Readiness": "Ready for Adoption",
        "Scopes": "General",
        "Cluster": "DevOps, Developer Experience, Infrastructure, Culture",
        "External Speaker": false,
        "Keywords": "['DevOps Research and Assessment', 'metrics', 'Cloud Native & DevOps practices & principles', 'difficulties in adopting DevOps practices', 'organization and architecture']"
    },
    "EffectiveTesting.md": {
        "Title": "Ecosystem: Effective developer testing: lessons I learned over time",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/EffectiveTesting.md",
        "Abstract": "We all know by now how to write automated tests. But can we get better at it? For example, how can we make sure we go beyond happy-path testing and create really strong test suites? Is code coverage a bad metric we should ignore, or can it actually help us? Should we go for unit or integration tests? Or are E2E tests much better for more complex systems? Is TDD really a must? Or can we design testable systems without it?\n\nIn this talk, I share lessons I learned over time:\n\n* Testing supports development and bug finding\n* Being systematic helps you create better test cases\n* Bugs love boundaries\n* Code coverage is a good tool\n* Dividing and conquer is the way to test complex systems\n* Testing has to be easy, otherwise no one will do it\n* Making code testable is key to happiness\n* You should trust your test suite\n* Testing isn't magical!\n\nThis talk is based on my recent Effective Software Testing: A Developer's Guide, published by Manning: https://www.effective-software-testing.com/.",
        "Date of Evaluation": "2023-07-20",
        "Development Phase": "Code",
        "Adoption Readiness": "Ready for Adoption",
        "Scopes": "General",
        "Cluster": "Developer Experience, Test Automation",
        "External Speaker": false,
        "Keywords": "- Automated tests\n- Test suites\n- Code coverage\n- Unit tests\n- Testable systems"
    },
    "generative-ai-for-abap.md": {
        "Title": "Ecosystem: How Generative AI can support ABAP developers",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/generative-ai-for-abap.md",
        "Abstract": "Generative AI has proven capable of generating code and being useful for developers. The ABAP platform wants to make use of this technology to address the total cost of development for ABAP applications. Use cases are abundant: from generating code for new applications over extending existing applications to moderinizing classic ABAP code to ABAP Cloud. We are running a reseach project to reveal today's boundaries (built-in \"knowledge\" about ABAP in LLMs, prompt engineering, model refinement and grounding) and to gather requirements for future LLMs to be trained with ABAP knowledge. In this session, we will give an overview of the current state of our research: PoCs and prompting techniques for certain use cases (e.g.: generating ABAP Cloud applications from natural language), results of our quality benchmarks, and tools we have built for PoCs and our research.",
        "Date of Evaluation": "2023-09-07",
        "Development Phase": "Code",
        "Adoption Readiness": "Visionary",
        "Scopes": "ABAP",
        "Cluster": "Developer Experience, Artificial Intelligence",
        "External Speaker": false,
        "Keywords": "['Generative AI', 'ABAP platform', 'code generation', 'ABAP applications', 'research project']"
    },
    "GitHubActionsWorkshop.md": {
        "Title": "Ecosystem: GitHub Actions Workshop: Lift-off with GitHub Actions at SAP - it's not rocket-science",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/GitHubActionsWorkshop.md",
        "Abstract": "In this workshop, you'll start a learning journey that will empower you to automate your workflows and deployments using GitHub Actions. Whether you're a beginner or have some experience, the workshop will help you gain confidence using Actions in SAP, and learn how to use it with Hyperspace.\n\nKey Workshop Highlights:\n1. GitHub Actions in SAP: You will learn how GitHub Actions works in SAP nowadays, and how it will work once they are Generally Available.\n2. Hyperspace Sneak Peak: How onboarding and using GitHub Actions with Hyperspace will work once General Availability is reached.\n2. Run your first GitHub Action: We will guide you through the process of setting up and running your first GitHub Action, providing you with a solid foundation to build upon.\n3. Harness the power of the Marketplace: Discover the vast collection of pre-built actions available in the Marketplace, allowing you to extend your workflows and enhance automation effortlessly.\n4. Create a complete and secure CI pipeline from scratch: Learn how to architect and implement a comprehensive Continuous Integration (CI) pipeline using GitHub Actions. We will cover best practices for security and code quality to ensure your workflows are efficient and reliable.\n5. Deploy your application to the cloud: Dive into the world of deployment automation as we guide you through the process of deploying your application to the cloud.\n\nGet ready to take off with GitHub Actions's General Availability in SAP!",
        "Date of Evaluation": "2023-07-25",
        "Development Phase": "Code, Build, Test, Release",
        "Adoption Readiness": "Early Adopter",
        "Scopes": "General",
        "Cluster": "DevOps, Developer Experience",
        "External Speaker": true,
        "Keywords": "['GitHub Actions', 'automate workflows and deployments', 'SAP', 'Hyperspace', 'CI pipeline']"
    },
    "GPTbasedQuestionAnswering.md": {
        "Title": "Ecosystem: GPT-based question answering for proprietary or confidential knowledge databases",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/GPTbasedQuestionAnswering.md",
        "Abstract": "This session bases on the experience collected from building HOUDINIE, a prototype of a secure GPT-based chat interface which answers with up-to-date knowledge from a private text embeddings database.\n\nDuring this session we will show you:\n\n*\tHow to set up the infrastructure for calling the GPT APIs as well as provisioning a vector database for storing fact knowledge\n*\tWhat text embeddings are and how to use them to organize and query a fact database\n*\tHow to create a CAP-based API service to build a question answering application",
        "Date of Evaluation": "2023-04-28",
        "Development Phase": "Code",
        "Adoption Readiness": "Early Adopter",
        "Scopes": "General",
        "Cluster": "Artificial Intelligence",
        "External Speaker": false,
        "Keywords": "- GPT-based chat interface\n- Secure prototype\n- Text embeddings database\n- Infrastructure setup\n- CAP-based API service"
    },
    "kg4hana.md": {
        "Title": "Ecosystem: KG4HANA: Knowledge Graph for SAP Metadata Models",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/kg4hana.md",
        "Abstract": "Developing applications using (cross) customer data sources from SAP systems faces several challenges. Manual data modeling needs to happen case by case, leading to high touch development. Domain knowledge is crucial, and onboarding for new developers slows down time to market. With our main persona of the developer type \"data scientist in SAP\", we have created a knowledge graph (KG) that addresses these challenges. It encodes the S4 public cloud metadata model and leverages the existing S4 situation knowledge graph for our use case. With the KG, we can re-use existing modeling across use cases and leverage existing efforts. In that way, we also ease the effort for new data scientists and other data hungry developers to acquire domain knowledge about SAP data models. In this talk, we will describe the KG use cases, the KG content and ways to access the KG. These include a graphical UI and also large language model (LLM) based access, which showcases the benefit of combining KG with LLMs.",
        "Date of Evaluation": "2023-08-29",
        "Development Phase": "Code",
        "Adoption Readiness": "Visionary",
        "Scopes": "General",
        "Cluster": "Artificial Intelligence",
        "External Speaker": false,
        "Keywords": "['challenges', 'knowledge graph', 'data modeling', 'domain knowledge', 'access']"
    },
    "KubernetesTheHardWay_AWalkThrough.md": {
        "Title": "Ecosystem: Kubernetes the Hard Way - a walk through and discussion",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/KubernetesTheHardWay_AWalkThrough.md",
        "Abstract": "I will be giving a live walk-through and discussion of [Kelsey Hightower's Kubernetes the Hard Way](https://github.com/kelseyhightower/kubernetes-the-hard-way)\n\nIf you are curious to see what Kubernetes is like under the covers, how it is assembled and wired up, and how it does all its magic in a secure fashion, come along.\nTo quote Kelsey: \"Kubernetes The Hard Way is optimized for learning, which means taking the long route to ensure you understand each task required to bootstrap a Kubernetes cluster.”\n\nThis is an overview of what we will be building, and can serve as a useful reference point:\n\n<img width=\"1792\" alt=\"KTHWa\" src=\"https://media.github.tools.sap/user/717/files/6fc610e6-2e0d-49f4-826e-e26b377ef315\">",
        "Date of Evaluation": "2023-07-17",
        "Development Phase": "Operate, Observe and Automate",
        "Adoption Readiness": "Ready for Adoption",
        "Scopes": "General, Kubernetes",
        "Cluster": "Cloud, Infrastructure",
        "External Speaker": false,
        "Keywords": "['Kubernetes the Hard Way', 'live walk-through', 'discussion', 'learning', 'secure fashion']"
    },
    "llm-commons.md": {
        "Title": "Ecosystem: Getting Started with LLM-based Applications in SAP",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/llm-commons.md",
        "Abstract": "The release of ChatGPT created a huge buzz that shows no signs of slowing down. We are all challenged to explore the new possibilities and come up with ideas that create value for SAP. To do this, it is important to gain first-hand experience and conduct our own experiments. In addition to personal experience, we need to create synergies and share best practices. One attempt to do this is the [`llm-commons`](https://github.tools.sap/AI-Playground-Projects/llm-commons) project. I will show you how to start testing your own ideas and how to enable others to do so by contributing to [`llm-commons`](https://github.tools.sap/AI-Playground-Projects/llm-commons).\n\nThe code examples I will show are meant to illustrate an additional point. In many discussions and conversations over the past few months, I've noticed that many people still think of chatbot-like applications when talking about what's possible with LLM. Therefore, I will show how LLMs can be used as a logical building block within an application, and what our team's main \"lessons learned\" are when building LLM-based applications beyond chatbots.",
        "Date of Evaluation": "2023-08-01",
        "Development Phase": "Code",
        "Adoption Readiness": "Early Adopter",
        "Scopes": "General",
        "Cluster": "Artificial Intelligence",
        "External Speaker": false,
        "Keywords": "['ChatGPT', 'software engineering', 'LLM-based applications', 'llm-commons project', 'synergies and best practices']"
    },
    "OpenIDConnectMoreFunAndPossibilities.md": {
        "Title": "Ecosystem: Workload Identities and OpenID Connect - More Fun, More Possibilities",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/OpenIDConnectMoreFunAndPossibilities.md",
        "Abstract": "Dive into the compelling use-cases for workload identities, grasp their benefits, and discover how they can foster more intuitive, maintainable, and secure setups.\n\nYou will delve into the nuances of using OpenID Connect in Jenkins, learn to secure database connections, appreciate the benefits of credential-less multi-cluster ArgoCD, and understand integration approaches with HashiCorp Vault. These instances merely scratch the surface of the fascinating scenarios you will encounter. This session aims to arm you with a wide-ranging understanding of the opportunities and practical strategies to enhance your setup.\n\nWhile it may help to have seen the previous session on [\"How to Establish Secure and Easy Communication with Workload Identities for Technical Users\"](https://pages.github.tools.sap/CloudNativeCulture/Ecosystem/#/Sessions/PastSessions/2023/WorkloadIdentiesWithOpenIDConnect), it's not a necessity. I'll provide a concise recap of the basics of workload identities. For a more in-depth understanding, I recommend viewing the [recording of the previous session](https://video.sap.com/media/t/1_qs396pw9/145787301).",
        "Date of Evaluation": "2023-11-21",
        "Development Phase": "Operate, Observe and Automate",
        "Adoption Readiness": "Ready for Adoption",
        "Scopes": "General",
        "Cluster": "DevOps, Developer Experience, Security, Infrastructure",
        "External Speaker": false,
        "Keywords": "['workload identities', 'OpenID Connect', 'database connections', 'credential-less multi-cluster ArgoCD', 'integration approaches']"
    },
    "OpenRewrite.md": {
        "Title": "Ecosystem: Large Scale Refactoring: Auto-Remediating Source Code at Scale with OpenRewrite",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/OpenRewrite.md",
        "Abstract": "Keeping up with code quality, security, and dependencies has become a large share of our work as developers. Scanning tools can help you find vulnerabilities and dependencies across hundreds of thousands of OSS projects, but the challenge is how to scale the triaging, reporting, and fixing that remains manual.\n\nIn this session, we’ll delve into the features and capabilities of OpenRewrite that enable you to not only find, but actually fix code quality, security and dependency issues automatically—at scale—across your modern code base. \n\nHave breaking changes been breaking your dev team's spirit? Have you been putting off migrating from Spring Boot 2 to 3? Java 8 to 11 to 17? JUnit 4 to 5? Or feeling buried under the weight of CVE patches and static analysis issue remediations? You don’t have to feel this way anymore. By leveraging OpenRewrite, your development team can free yourselves from 1,000s of hours of tedious manual work yet remain in control of automated, easily actionable (i.e. mergable) pull requests to safely update deprecated APIs, refactor code, modernize libraries, and apply architectural patterns consistently across an entire codebase.",
        "Date of Evaluation": "2023-08-08",
        "Development Phase": "Code",
        "Adoption Readiness": "Early Adopter",
        "Scopes": "General",
        "Cluster": "DevOps, Developer Experience",
        "External Speaker": true,
        "Keywords": "['code quality', 'security', 'dependencies', 'OpenRewrite', 'automated fixes']"
    },
    "SAPBusinessApplicationStudio.md": {
        "Title": "Ecosystem: Develop Full-Stack Applications Using Productivity Tools in SAP Business Application Studio",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/SAPBusinessApplicationStudio.md",
        "Abstract": "SAP Business Application Studio (BAS) is being used by tens of thousands of SAP customer developers and SAP internal developers every day.\nBAS, powered by MS code OSS, the open source that serves MS VSCode desktop product, offers a set of high productivity visual tools for the proffesional developers, as well as a clear path to standard proffesional develpment tools, according to the developers needs and skillset and the application complexity.\nIn this session we will be giving a live walkthrough of the developer experience, the key benefits and the way forward.",
        "Date of Evaluation": "2023-08-02",
        "Development Phase": "Code, Build, Test",
        "Adoption Readiness": "Default in Golden Path",
        "Scopes": "General",
        "Cluster": "Developer Experience",
        "External Speaker": false,
        "Keywords": "['SAP Business Application Studio', 'MS code OSS', 'high productivity visual tools', 'professional development tools', 'developer experience']"
    },
    "TCOGoodPractices.md": {
        "Title": "Ecosystem: Good practices for optimizing cost for cloud development and operations",
        "GitHub Path": "https://github.tools.sap/CloudNativeCulture/Ecosystem/blob/main/Sessions/PastSessions/2023/TCOGoodPractices.md",
        "Abstract": "To meet market expectations and achieve our ambitions, SAP needs to return to double-digit profit growth in 2023 and reach an 80% cloud gross margin by 2025.\nAnd you can help! But how? Jan and Jochen will share good practices for optimizing cost for cloud development and operations.",
        "Date of Evaluation": "2023-08-09",
        "Development Phase": "Cross",
        "Adoption Readiness": "Ready for Adoption",
        "Scopes": "General",
        "Cluster": "Lifecycle Management",
        "External Speaker": false,
        "Keywords": "['market expectations', 'double-digit profit growth', '80% cloud gross margin', 'optimizing cost', 'cloud development and operations']"
    }
}